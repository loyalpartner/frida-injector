name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    name: Build for Linux (Debian Buster)
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Install Git and build dependencies
        run: |
          apt-get update
          apt-get install -y build-essential git curl libglib2.0-dev wget xz-utils pkg-config

      - name: Install Go
        run: |
          curl -L https://golang.org/dl/go1.21.0.linux-amd64.tar.gz -o go.tar.gz
          tar -C /usr/local -xzf go.tar.gz
          echo "PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV

      - name: Install Frida Core devkit
        run: |
          # Install specific Frida version required for the project
          FRIDA_VERSION="16.3.1"
          FRIDA_DEVKIT="frida-core-devkit-${FRIDA_VERSION}-linux-x86_64.tar.xz"
          FRIDA_URL="https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/${FRIDA_DEVKIT}"
          
          echo "Downloading Frida Core devkit ${FRIDA_VERSION}..."
          mkdir -p /tmp/frida-devkit
          wget -q $FRIDA_URL -O /tmp/frida-devkit/${FRIDA_DEVKIT}
          
          cd /tmp/frida-devkit
          tar -xf ${FRIDA_DEVKIT}
          
          # Copy header to include directory
          mkdir -p /usr/local/include/frida
          cp frida-core.h /usr/local/include/frida/
          
          # Create symlink for compatibility
          ln -sf /usr/local/include/frida/frida-core.h /usr/local/include/frida-core.h
          
          # Copy library to lib directory
          mkdir -p /usr/local/lib
          cp libfrida-core.a /usr/local/lib/
          
          # Refresh linker cache
          ldconfig
          
          echo "Frida Core devkit installed successfully"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build for Linux AMD64
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: "-Wno-error=incompatible-pointer-types -I/usr/local/include"
          CGO_LDFLAGS: "-L/usr/local/lib"
          GOARCH: "amd64"
          GOOS: "linux"
        run: |
          mkdir -p build
          go mod tidy
          go build -buildvcs=false -ldflags "-s -w" -o build/frida-injector_linux_amd64 .
          cd build
          tar -czvf frida-injector_linux_amd64.tar.gz frida-injector_linux_amd64
          sha256sum frida-injector_linux_amd64.tar.gz > frida-injector_linux_amd64.tar.gz.sha256
          sha256sum frida-injector_linux_amd64 > frida-injector_linux_amd64.sha256

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          apt-get install -y curl jq
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          
          echo "Creating release for tag $TAG_NAME..."
          
          # Create the release
          RELEASE_RESPONSE=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" \
            -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"Release $TAG_NAME\",\"draft\":false,\"prerelease\":false,\"generate_release_notes\":true}")
          
          # Extract the upload URL
          UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r .upload_url | sed 's/{?name,label}//g')
          
          echo "Uploading release assets..."
          
          # Upload the binary
          echo "Uploading binary..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            "${UPLOAD_URL}?name=frida-injector_linux_amd64" \
            --data-binary "@build/frida-injector_linux_amd64"
          
          # Upload the tarball
          echo "Uploading tarball..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/gzip" \
            "${UPLOAD_URL}?name=frida-injector_linux_amd64.tar.gz" \
            --data-binary "@build/frida-injector_linux_amd64.tar.gz"
          
          # Upload the checksum files
          echo "Uploading checksums..."
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: text/plain" \
            "${UPLOAD_URL}?name=frida-injector_linux_amd64.tar.gz.sha256" \
            --data-binary "@build/frida-injector_linux_amd64.tar.gz.sha256"
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: text/plain" \
            "${UPLOAD_URL}?name=frida-injector_linux_amd64.sha256" \
            --data-binary "@build/frida-injector_linux_amd64.sha256"
          
          echo "Release creation completed successfully!"